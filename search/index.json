[{"content":"推荐软件的必要条件是开源或买断制，以下介绍一些我在电脑上必使用的软件。\n侧重点主要是些没学习成本的软件，力求小白也能用\n点击标题跳转软件地址，右侧目录暂时无法使用\nEverything 已经被营销号推荐烂的软件，界面简洁搜索迅速，支持正则表达式，也可以用来启用ETP/FTP服务器\nListary 基础功能类似Mac的聚焦搜索，但是有几个相当好用的附带功能。免费版完全可用，虽然我入了专业版。\nCtrl+G将当前文件夹跳转到上次打开的路径 文件夹集成搜索 额外功能 PixPin 国产截图神作，代替Snipaste的唯一工具，Mac版尚未推出。经过多个版本的更新，现在卡顿情况已经很少，功能只多不少。\nOCR 长截图 webp截图 录制 ClipX 使用频率相当高的软件，官网也已经年久失修了。\n但是他的功能实在太好用了，鼠标移到哪剪贴板历史显示在哪，最多可设置保存1024条记录\n由于和我自身的快捷键冲突，并为了日常使用舒服，我将快捷键设置为了Alt+C。但是你在设置的时候这个快捷键会自动关闭软件，所以必须进配置文件修改，可以参考为ClipX设置粘帖热键（Alt+C）\nHoneycam 在进行简单的录制、格式转换时，我真的不想打开别的繁琐软件。\nHoneycam刚好小巧强大，可控性强，能制作高质量的gif/webp动画\nGeek 卸载，好用\nInternet Download Manager IDM最快的多线程下载器，无需多言，入正享受更新。配合网络插件抓取网页内容。\n火绒安全 虽然说之前出了次安全事故，但对于大多电脑小白来说很简洁了。强烈推荐安全工具中的弹窗拦截、右键管理和网络修复，能节省很多时间。\nDism++ 很好用的清理工具，系统优化面板里有很多好用的功能\nWizTree 这个软件能快速扫描出文件夹的树结构，方便用户删除一些无用的内容。当然为了释放磁盘空间可以选择DiskGenius来扩容，或者用FolderMove来符号链接文件夹\n后记 10个感觉差不多了，其实好用的软件还是蛮多的，有空再写。这篇文章有部分参考我以前发过的专栏。好久没玩瓦了，拿张苏可大神的画做封面。最近刚开始用Directory Opus，估计之后可能会出篇文章吧，谢谢！\n@Dino\n致谢 cover: 苏可\n","date":"2024-03-20T23:24:23+08:00","image":"/post/daily-software-01/cover.webp","permalink":"/post/daily-software-01/","title":"PC日常使用软件分享（一）"},{"content":" 记录一下折腾的过程。也纪念一下鸟山明老师，犹记得小时候我哥带我看龙珠的快乐时光，虽然只记得小悟空第一次在月光下变身那集，还有龟仙人一些搞笑桥段。据说是死于急性硬脑膜外出血。\n妇女节这天也发生了很惊悚的事情，我爸昨天刚好骑电瓶被车撞到了，头着地缝了好几针，还好CT没事，太吓人了。\n世事无常啊，找个挣钱又有时间陪家人的工作，希望大家都身体健康、快乐地过完一辈子\n起因 在一次用lightroom处理照片的时候，我想着咋不把raw文件和成片都拖到这个100G的云盘里呢，不用白不用。好家伙，结果直接给我禁用了。但是我其他电脑上的同步还是能够正常使用。\n文件同步已禁用，请联系你的IT管理员\nFile syncing disabled. Contact your IT administrator for details\n我TM自己就一个个人用户，哪来的IT管理员，看了一下官方的答复\n在使用各种干净的卸载清理工具，活动检查器禁用服务等等操作后，均以失败告终(我这台Mac这辈子都没重启这么多次)，甚至电脑里都出现不了Creative Cloud Files这个文件夹了\n解决 使用以下方法前请确保已经备份您的云文件，以避免造成不必要的损失，已上传的文件不会丢失。\ncd Library/Application\\ Support/Adobe open . Windows下为该路径C:\\Users\\\u0026lt;用户文件夹\u0026gt;\\AppData\\Local\\Adobe\\OOBE\n删除整个OOBE文件夹后重启计算机即可\n致谢 cover:@Anonamos_701\n","date":"2024-03-09T05:47:19+08:00","image":"/post/creative-cloud-file-sync-disabled/cover.webp","permalink":"/post/creative-cloud-file-sync-disabled/","title":"解决Creative Cloud文件同步禁用"},{"content":"本篇仅为champhoon大佬文章在实际部署过程中的补充\n在安装Wrangler-CLI过程中命令行提示v1版本已经不再维护，目前已经更新至v3，npm项目的地址为wrangler\n由于版本更新原文章中许多命令并不适用，具体可参考官方文档\n安装wrangler\nnpm install wrangler --save-dev npx wrangler --version运行正确即安装成功\n登录wrangler\nnpx wrangler login 需要命令行中显示success，如不行建议开全局代理\n如果wrangler.toml你按原文章走流程了也行，只需在第二行加行main = \u0026quot;dist/worker\u0026quot;\n后续就和原文章一样，在同样命令前加npx即可，由于我在项目中的pnpm中卡住，一直显示Running postinstall script\u0026hellip;\n因此我直接在cmd中npm installwebpack和webpack-cli，如果还有其它的也顺手安装，最后部署\ncd moe-counter-cf npx wrangler deploy 如果显示Error fetch failed大概率是因为cloudflare的api在中国大陆被墙了或者你还没登录wrangle，可以开全局代理试试。命令行最后显示Deployment ID应该就是成功了。\n最后进入自己的域名counter.example.com，如果希望demo页正常显示就进入src/routes/index.html改一下img地址\n总之终于能国内正常访问网址了好开心，虽然以前的6k浏览量没了😭(水分很大)\n再次感谢champhoon和dsrkafuu，以及原作者journey-ad\n后记 Your browser doesn't support HTML5 video. Here is a link to the video instead. 本来想把这个当封面的，结果webp效果好点要7M，考虑到网速还是算了。这个UI入水那下是真的惊艳(好想玩P3R啊啊啊啊，谁送我一个)\n这里放的是mp4，因为我发现我这个图片放大的js貌似不支持avif，而且avif和wep在加载时会闪烁\n但是avif格式只需4M，奈何高质量的原生Go编码器还没有，放不到封面上\n致谢 Cover: P3R\nMoe-Counter\nmoe-counter-cf\n将萌萌计数器部署到 Cloudflare Workers\n","date":"2024-03-05T01:44:58+08:00","image":"/post/moe-counter-cf/cover.webp","permalink":"/post/moe-counter-cf/","title":"将萌萌计数器部署到 Cloudflare Workers"},{"content":" 我最初找到的官方答复是这个Tessellation Setting for Project，但是这个问题实在太影响使用体验了。 比如你每次打开一个做到一半的项目，细分设置总会重置，都要多点那么几下回到以前的状态。其实我之前解决过一次，但忘记记录了，这次在家里的电脑上正好复刻一下。\n首先我们知道这个参数是在Adobe Standard Matrial里设置的，理所应当地打开编辑-首选项-项目(Edit-Prefenrence-Projects)，看到了 Default Shader，基本上就是这个文件了。其实我是先把上面那个 default_project.sbsprj 和 user_project.sbsprj 看了一遍发现没有，不过都不重要，有思路找就行 把这个文件用记事本打开\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;glslfx version=\u0026#34;1.1.0\u0026#34; author=\u0026#34;Adobe\u0026#34; label=\u0026#34;Adobe Standard Material\u0026#34;\u0026gt; \u0026lt;!-- TECHNIQUES --\u0026gt; \u0026lt;technique name=\u0026#34;Tessellation\u0026#34; label=\u0026#34;Tesselation + Displacement\u0026#34;\u0026gt; \u0026lt;!-- UNIFORMS --\u0026gt; \u0026lt;uniform name=\u0026#34;parallax_mode\u0026#34; guiName=\u0026#34;Parallax Mode\u0026#34; min=\u0026#34;1\u0026#34; max=\u0026#34;1\u0026#34; /\u0026gt; \u0026lt;uniform name=\u0026#34;scalarZeroValue\u0026#34; guiName=\u0026#34;Height Level\u0026#34; guiGroup=\u0026#34;Height\u0026#34; usage=\u0026#34;heightLevel\u0026#34; guiWidget=\u0026#34;slider\u0026#34; default=\u0026#34;0.5\u0026#34; min=\u0026#34;0\u0026#34; max=\u0026#34;1\u0026#34; guiMin=\u0026#34;0\u0026#34; guiMax=\u0026#34;1\u0026#34; guiStep=\u0026#34;0.1\u0026#34; /\u0026gt; \u0026lt;uniform name=\u0026#34;tessellationFactor\u0026#34; guiName=\u0026#34;Tessellation Factor\u0026#34; guiGroup=\u0026#34;Height\u0026#34; guiWidget=\u0026#34;slider\u0026#34; default=\u0026#34;1\u0026#34; min=\u0026#34;1\u0026#34; max=\u0026#34;64\u0026#34; guiMin=\u0026#34;1\u0026#34; guiMax=\u0026#34;16\u0026#34; guiStep=\u0026#34;1\u0026#34; /\u0026gt; 打开后看前几行基本就知道个大概了，Height Level、Tessellation Factor什么的基本都可以设置，所以我就改成default=\u0026quot;16\u0026quot;这样了。效果如下图所示\n如果是放在C盘的可能会遇到这种无法保存的情况，只需右键文件夹-属性-安全-用户-编辑，给相应权限即可 其实还是有痛点的，比如你调整好的height level再重新打开还是还原为默认值，不过做完之后影响不大，就是Adobe咋这么懒，这个材质的设置值就不能保存在项目文件中吗🤔\n致谢 Cover: MEInoss\n","date":"2024-02-28T19:54:52+08:00","image":"/post/sd-tessellation/cover.webp","permalink":"/post/sd-tessellation/","title":"如何在Substance Designer中设置Tessellation Factor的初始值"},{"content":" 用了半年的G7X3，但是一英寸的卡片机甚至比不上新换的小米14了。\n为了更高的可玩性和记录生活，入手了α7C II 和适马28-70\n这个封面蛮青春洋溢的就选了，画得真好😭😭\n购机往事碎碎念 说实话这机子是真难原价买到，官网订阅通知都是秒没，全是能够加入购物车但是没法结账。结果那天没货1h后，我没事瞎点了一下居然有货，而且能买好几台，当然倒狗是不会当的，咬咬牙直接拿下 这机子对于目前的我来说近乎于完美无缺，尽管没有ZV-E1的动态增强防抖，但我并不怎么拍视频，够用就行\n本篇主要记录自用的一些设置和思考，想到哪写到哪，至于参数什么的都能自己去了解。\n自定义键设置 首先是拍照模式下自定义键的设置，理由之后再讲，c1设置为对焦模式，c2即删除键设置为触摸操作选择\nAF-ON键设置为放大对焦，大轮盘设置为创意外观，录制键为对焦区域\n另外就是菜单界面的收藏设置，我目前只收藏了这些，需要的只需在选项处按下收藏键即可添加\n知识点 对焦模式 一般有五种，AF代表Auto Focus，MF代表Manual Focus\n建议观看视频快速了解\n我粗浅的总结如下\nAF-S (Single) ———— 半按快门单次对焦 AF-C (Continous) ———— 连续对焦移动主体 AF-A (Automatic) ———— S和C的智能结合 DMF (Direct) ———— 单次对焦后手动对焦 MF ———— 手动对焦 最常用的就是AF-C和DMF，需要完全可控时MF。由于A7C2引入了AI识别技术，并且能够更改识别类型，因此实际使用过程中AF-C追焦的体验相当好\n顺便简单带过一下对焦区域，一般就是广域、区、点对焦和跟踪等等。由于技术的发展现在的对焦已经相当迅速傻瓜，前几种顾名思义，主要说一下跟踪的使用场景。你可以先识别到主体，再进行构图，但是其实大部分情况下你手点下触摸屏也能达到同样的效果\n创意外观 创意外观作为A7M4后才有的功能当然是十分好用，即一个调色预设，可以去看下官方的帮助指南简单理解下，这个B站视频讲得也很好，浅显易懂\n偷一下视频底下的评论总结\nPT：肖像模式，对比度偏低，画面色彩相对标准柔和很多。整体画面偏洋红。 NT：饱和度偏低，略带发挥的效果，适合淡雅场景。适合后期进行微调，不适合鲜艳场景。 VV，VV2：饱和度偏高，适合花花草草。vv2比vv更加的锐利和明亮。 FL：对比度强，高光容易溢出，明亮对比比较强烈。蓝偏青，绿偏深，橙黄偏淡，色相稍微偏黄，整体胶片质感比较强烈。画面含蓝绿色是最优解。 IN：比NT更灰，阳光充足的情况下会有明亮的感觉，饱和度对比度偏低。黄色橙色偏深，绿色偏黄，画面偏暖。适合时尚风格和情绪片。红色偏淡且色相偏橙。较为吃光。 SH：极大提亮画面，适合拍大光比，整体画面较柔和。会发灰，特别是暗部多的场景。 其实理解一下英文就知道这些是什么作用了，Portrait、Netural、Vivid、Film、Ins、Soften Highlight\n镜头 镜头方面为了适合A7C2的体积我选择的是适马28-70mmF2.8，其实也可以选择24-70，因为貌似新批次都不大会进灰了。富哥选2070G也蛮好的，不过在旅游完之后再让我选的话，我一定咬咬牙上腾龙28-200.旅游的时候有个长焦实在太爽了，广角不够直接手机拍也不错的。\n选择28-70主要有几个原因，具体评测可以看这个B站视频，讲得蛮好。\n体积小重量轻 变焦环阻尼舒适 锐化不错 准齐焦 另外值得注意的是长焦锐化没广角端好，据有关不可靠数据测试在F4时锐度最好\n至于广角端如果不嫌麻烦可以换极具性价比的唯卓仕AF20mm F2.8\n配件 小隼Maglink快拆腕带 小隼Maglink快拆肩带 马小路xt 26S 碎碎念 另外摄影配件真是个暴利的行业，什么肩带、摄影包技术含量没多高，卖的死贵，比如pd、pgy。我都买不起，只能买买相对良心点的小隼啦。一块斯莫格的兔笼、L版也贵的离谱。\n拿pgy刚出不久的那个闪传卡盒为例，乍一看很好，实则处处搞阉割。不能双卡读取，没有tf读卡器，599的东西还只是个10Gbps的usb3gen2x1，还不如去搞根4.0的线战未来\n我说实话还是多给自己的背包扩展扩展FidLock的磁扣来的实在\n视频 A7C2有了7轴防抖后可能手持拍拍简单的视频还真可以，我也稍微学了下log拍摄和机内lut，就是感觉新手在不同环境下调参数好累，目前感觉拍log的时候曝光补偿在+0.7比较不错。就是我实在太懒了啊啊啊啊啊啊啊啊，这么多素材还要剪和统一调色对我来说太花时间了，哎😔\n后记 对于只是想出门随便拍拍的真的最好上腾龙28-200，我还是看他二代啥时候出再换吧。最近两月的照片都处理好了，但是视频遥遥无期，看我啥时候有空把春节玩的写出来吧\n致谢 Cover: Li Flag Sony帮助指南 Sony Alpha Blog镜头锐度测试\n","date":"2024-02-06T14:38:59+08:00","image":"/post/new-to-photography/cover.webp","permalink":"/post/new-to-photography/","title":"摄影小白入坑记录"},{"content":" 做些工程的Breakdown顺便积累些知识吧，主要记录下比较有学习价值的内容，刚开始还是先从基础点的着手\nSafe HouseLEARTES \u0026amp; DEKOGON STUDIOS REAL-TIME ENVIRONMENT ART CHALLENGE https://www.artstation.com/artwork/g2an6Z 先学习下timelaps\nYour browser doesn't support HTML5 video. Here is a link to the video instead. 可顶点绘制的布料材质 Your browser doesn't support HTML5 video. Here is a link to the video instead. 主要就是依靠下面这张图\nR通道绘制alpha，G通道绘制WPO，法线有一个平滑处理(下图可右键打开查看)\n管道蓝图 比较常规的样条线蓝图\n通过枚举设置管道的头尾\nDecal蓝图工具 主要方便UV偏移以快速选中需要的decal，学习蓝图设置动态材质\n塑料薄膜 Your browser doesn't support HTML5 video. Here is a link to the video instead. 了解spiralblur这个材质函数\n总结 其实作者最花时间的还是场景中各种小资产的制作，主材质也是相对简单的。从一个基础的构图开始，最后添加上了各种安全屋的小物件丰富场景\n","date":"2024-01-07T20:26:37+08:00","image":"/post/safehouse-breakdown/cover.jpg","permalink":"/post/safehouse-breakdown/","title":"SafeHouse Breakdown"},{"content":" 由于之前博客为了输入方便一直放在根域名，现在需要将字体部署到子域名下，为了干净整洁些需要将之前的DNS删除。\n并且不再用vercel部署，采用cloudflare\n进入cloudflare，添加一个编辑区域DNS的API Token，并记录下Token。\n点击进入域名的概述，Zone ID在右侧一列中\n创建一个powershell脚本(.ps1)，并替换API_TOKEN和ZONE_ID\n$API_TOKEN = \u0026#34;\u0026lt;API_TOKEN\u0026gt;\u0026#34; $ZONE_ID = \u0026#34;\u0026lt;ZONE_ID\u0026gt;\u0026#34; $baseUrl = \u0026#34;https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records\u0026#34; $headers = @{ \u0026#39;Authorization\u0026#39; = \u0026#34;Bearer $API_TOKEN\u0026#34; \u0026#39;Content-Type\u0026#39; = \u0026#34;application/json\u0026#34; } $listUrl = $baseUrl + \u0026#39;?per_page=500\u0026#39; Write-Host $listUrl $records = Invoke-RestMethod -Uri $listUrl -Method \u0026#39;GET\u0026#39; -Headers $headers $records = $records | Select-Object -ExpandProperty result foreach ($record in $records) { Write-Host \u0026#34;Deleting $($record.name) that points to $($record.content)\u0026#34; $deleteUrl = $baseUrl + \u0026#39;/\u0026#39; + $record.id Invoke-RestMethod -Uri $deleteUrl -Method \u0026#39;DELETE\u0026#39; -Headers $headers Write-Host $deleteUrl } 右键文件以powershell运行。由于我有700多条记录，执行两次即可\n好有副岛成记的风格\n@Chuzenji\n参考 cover:@mocha\nBulk delete DNS records\n","date":"2023-10-19T16:35:44+08:00","image":"/post/cloudflare-dns-delete/cover.jpg","permalink":"/post/cloudflare-dns-delete/","title":"Cloudflare Dns 批量删除"},{"content":"前言 我创建这个博客的初衷，有很大一部分是方便记录分享自己实现的一些几何节点效果，因此写一下这篇文章来分享一下我之前学习过程中的一些感悟和经验，希望对你有帮助。\n感兴趣的话可以看下我的Artstation或者Bilibili，里面大概还是有很多相关的内容的，或者你也可以打开Gumroad直接下载去玩玩看。\n随便举两个例子\n用途 我们之所以用几何节点制作效果当然是因为它有很多好处。程序化节点式的工作流让你能够轻松快捷地调整最终效果，而不是又从零到一地画一幅画，并且我们能精确地操控每一个参数供我们使用。也能够将工作流中常使用的效果打包为节点组，高效地嵌套使用。\n学习方法 其实最快的学习方式就是看到一个好看的效果，直接上手去实现。做的过程中会慢慢地了解制作思路，遇到理解不了的节点就去翻翻文档或解释的视频。\n国内的话强烈建议可以看看峰峰居士和darkstarrd的视频，之后尤其要了解一下几何节点中的几何流和函数流思想。\n至于版本我建议使用3.4之后的版本，很多冗余的节点都被修改了，3.3也行，大差不差。\n其实最重要的是多看别人开阔眼界，过程中了解一些自己之前没怎么用到的节点和思路。看到一个大佬的推文或教程之后，根据相关推荐发现一个又一个新大陆。入门之后可以尝试用各种节点包加速工作流，我了解到的部分内容放在相关资源里。\n必要插件 内置插件Node Wrangler，有点基础的话应该都开启了，善用Ctrl Shift LMB预览值和其他基础操作\nnode_tabber，使用houdini的方式搜索节点。对我来说相当重要的插件，再用不用Shift A多点几步了，拯救时间的利器\n效果如下，快速查找节点\n相关资源 推荐博主\n入门\nJoey Carlino Sina Sinaie CrossmindStudio Johnny Matthews Khamurai 进阶\nCartesian Caramel Celestialmaze Erindale HotdogNugget Toolkit\nBradley Node Preset Erindale Toolkit Higgsas Nodes 结语 总之在学习中开拓自己的思路是最重要的，没有几何节点实现不了的效果，创意是无限的\nLily\u0026amp;Buttercups\n参考与鸣谢 cover: @Dino\n","date":"2023-10-05T23:20:26+08:00","image":"/post/geometrynode-start/cover.jpg","permalink":"/post/geometrynode-start/","title":"几何节点入门纲要"},{"content":"前言 上个月从零开始直接上手react three fiber，跟着同事写了一堆交互，总算弄得差不多了。不会React，不会TS，不会three，真不知道自己怎么过来的。途中也了解到原子化css，总之收获颇丰。目前是因为需要将渲染画面推流到场景中，故做点经验分享\n前期准备 首先得创建个场景然后播放视频吧，可以参考下面我做的这个案例\nGreenScreen-Streaming\n首先做一个VideoMaterial的function，减少耦合度。当然你也可以写的简单点，这里主要是为了后续添加遮罩的方便。但是存在一定色差，暂时没找到解决方法\nfunction VideoMaterial({ src, mask_src }) { const texture = src ? useVideoTexture(src) : null const mask = mask_src ? useVideoTexture(mask_src) : null return ( \u0026lt;meshPhysicalMaterial color={0x000000} emissive={0xffffff} emissiveMap={texture} alphaMap={mask} emissiveIntensity={1} opacity={1} transparent={true} toneMapped={false} /\u0026gt; ); } 记得用Suspense包裹一下，不然会报错,因为渲染的前后关系不对。建议fallback里给个材质留给加载的时间，这里我放了个loading的动画\n\u0026lt;mesh\u0026gt; \u0026lt;planeGeometry args={[7.111, 4]} /\u0026gt; \u0026lt;Suspense fallback={\u0026lt;VideoMaterial src=\u0026#34;loading.mp4\u0026#34; /\u0026gt;}\u0026gt; \u0026lt;Suspense \u0026gt; \u0026lt;VideoMaterial src=\u0026#34;WING IT! - Blender Open Movie.mp4\u0026#34; mask_src=\u0026#39;mask.mp4\u0026#39; /\u0026gt; \u0026lt;/Suspense\u0026gt; \u0026lt;/mesh\u0026gt; 这样就可以看到一个带透明通道的视频显示在屏幕上，当然可能用quicktime格式会更快些，但体积大\n视频流 有条件的可以现在主机上插个摄像头，先通过API获取到视频流\nconst [stream, setStream] = useState() useEffect(async () =\u0026gt; { const constraints = { audio: false, video: true, } navigator.mediaDevices .getUserMedia(constraints) .then((stream) =\u0026gt; { window.stream = stream setStream(stream) console.log(stream) navigator.mediaDevices.enumerateDevices().then(function (devices) {console.log(devices)}) }) .catch((error) =\u0026gt; { console.log(error) }) }, []) 不出意外的话屏幕上就能出现摄像头的画面了。另外可以在useState中设置参数来显示加载动画\nOBS虚拟摄像头 但是我们如果想输出各种画面一般都是使用OBS的虚拟摄像机推流。那么怎么切换摄像机呢？\n可以看到上述的代码通过使用constraints来约束使用的摄像头，需要的deviceId可从console中获取\nInputDeviceInfo deviceId: \u0026#34;6bd3a42e2bf68c2246a5a9bcffa2e43fab316554f504a6ad5687c5674ea6e5d1\u0026#34; groupId: \u0026#34;e8291660abbb766dfaaebafbd6f4d3eb046f00603e3cb4d3c2bcd30673415982\u0026#34; kind: \u0026#34;videoinput\u0026#34; label: \u0026#34;OBS Virtual Camera\u0026#34; 于是我们找到OBS虚拟摄像头的信息,填入constraints\nconst constraints = { audio: true, video: { deviceId: \u0026lt;YOUR OBS ID\u0026gt; } } 绿幕shader 接下来就剩抠绿幕了。你或许会问为什么不在OBS里直接用色度键去除呢？因为它不支持推流视频带alpha通道，虽然抠的只剩个人但推出去还是个大黑框\n于是我们就得用到shaderMaterial\nconst vertexShader = ` varying vec2 vUv; void main( void ) { vUv = uv; gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0); } ` export default vertexShader; const fragmentShader = ` uniform vec3 keyColor; uniform float similarity; uniform float smoothness; varying vec2 vUv; uniform sampler2D map; void main() { vec4 videoColor = texture2D(map, vUv); float Y1 = 0.299 * keyColor.r + 0.587 * keyColor.g + 0.114 * keyColor.b; float Cr1 = keyColor.r - Y1; float Cb1 = keyColor.b - Y1; float Y2 = 0.299 * videoColor.r + 0.587 * videoColor.g + 0.114 * videoColor.b; float Cr2 = videoColor.r - Y2; float Cb2 = videoColor.b - Y2; float blend = smoothstep(similarity, similarity + smoothness, distance(vec2(Cr2, Cb2), vec2(Cr1, Cb1))); gl_FragColor = vec4(videoColor.rgb, videoColor.a * blend); } ` export default fragmentShader App.js内\nconst streamTexture = useVideoTexture(stream); const material = new THREE.ShaderMaterial({ transparent: true, uniforms: { map: { value: streamTexture }, keyColor: { value: [0.0, 1.0, 0.0] }, similarity: { value: 0.7 }, smoothness: { value: 0.0 } }, vertexShader, fragmentShader }); return ( \u0026lt;Suspense\u0026gt; \u0026lt;mesh position={[-8, 2, -4]} scale={1} material={material} \u0026gt; \u0026lt;planeGeometry args={[7.111, 4]} /\u0026gt; \u0026lt;/mesh\u0026gt; \u0026lt;/Suspense\u0026gt; ); 这里我事先放了一个绿幕视频作为加载动画，只要输入自己的deviceId就能正常显示了\n后话 至于为什么这里不采用VideoMaterial另开一个材质函数的写法，而是three.js的用法，是因为我也不知道为什么会有bug，欢迎在评论区交流\n最后在实际体验过程中，我需要让这块平面始终朝向摄像机，会的人可能觉得一个useRef和useFrame就解决了，但是我拿不到父组件的摄像头信息。后来终于发现可以用useThree这个hook，直接拿到camera\n参考链接 webcam\nBye~Bye 和纱太好看了\n@Kerno_kr\n","date":"2023-09-14T17:18:38+08:00","image":"/post/r3f-streaming/cover.jpg","permalink":"/post/r3f-streaming/","title":"R3F蒙版\u0026绿幕推流"},{"content":"研究了一会儿hugo中怎样使用图片，顺便做个记录。\n最高效正确的方法应该就是使用Markdown render hooks，即可通过以下的markdown形式快速地调整图片大小\n![Petrified Forest](a.jpg?w=500) ![Bryce Canyon](images/b.jpg?h=200\u0026amp;f=webp) ![Zion](images/c.jpg?w=150\u0026amp;h=150\u0026amp;m=fill\u0026amp;q=50\u0026amp;f=png\u0026amp;i=my-id\u0026amp;c=my-class) ![Hugo logo](https://gohugo.io/img/hugo-logo.png?w=200) 但是我太懒还没学会，最简单的应该就是用html自带的img标签，但不知道为什么我这无法显示，如果这样的话我目前发现有两种解决办法\n在theme的css中添加需要的样式，我使用的papermod主题默认在post-single文件中\n.post-content img[src*=\u0026#34;#minipic\u0026#34;] { max-width: 200px; display: block; } //使用 ![a](../1.png#minipic) 也可以把标签加在alt中，但这样局限性很大，最多定义几种常用大小。\n另外一种方法就是使用shortcodes，类似于组件，官方已经写好了一个figure\n{{去掉#\u0026lt; figure src=\u0026#34;../1.png#center\u0026#34; width=250px \u0026gt;}} 除此之外还有的需求尤其是移动端就是要能够放大图片，于是我在这个issue下找到了答案\n# render-image.html {{- if and (ne .Page.Kind \u0026#34;section\u0026#34;) (.Page.Section ) }} \u0026lt;!-- Generate a unique id for each image --\u0026gt; {{- $random := (substr (md5 .Destination) 0 5) }} \u0026lt;input type=\u0026#34;checkbox\u0026#34; id=\u0026#34;zoomCheck-{{$random}}\u0026#34; hidden\u0026gt; \u0026lt;label for=\u0026#34;zoomCheck-{{$random}}\u0026#34;\u0026gt; \u0026lt;img class=\u0026#34;zoomCheck\u0026#34; loading=\u0026#34;lazy\u0026#34; decoding=\u0026#34;async\u0026#34; src=\u0026#34;{{ .Destination | safeURL }}\u0026#34; alt=\u0026#34;{{ .Text }}\u0026#34; {{ with.Title}} title=\u0026#34;{{ . }}\u0026#34; {{ end }} /\u0026gt; \u0026lt;/label\u0026gt; {{- else }} \u0026lt;img loading=\u0026#34;lazy\u0026#34; decoding=\u0026#34;async\u0026#34; src=\u0026#34;{{ .Destination | safeURL }}\u0026#34; alt=\u0026#34;{{ .Text }}\u0026#34; {{ with .Title}} title=\u0026#34;{{ . }}\u0026#34; {{ end }} /\u0026gt; {{- end }} # extend_footer.html \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/medium-zoom/1.0.6/medium-zoom.min.js\u0026#34; integrity=\u0026#34;sha512-N9IJRoc3LaP3NDoiGkcPa4gG94kapGpaA5Zq9/Dr04uf5TbLFU5q0o8AbRhLKUUlp8QFS2u7S+Yti0U7QtuZvQ==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; const images = Array.from(document.querySelectorAll(\u0026#34;.post-content img\u0026#34;)); images.forEach(img =\u0026gt; { mediumZoom(img, { margin: 20, /* The space outside the zoomed image */ scrollOffset: 40, /* The number of pixels to scroll to close the zoom */ container: null, /* The viewport to render the zoom in */ template: null, /* The template element to display on zoom */ background: \u0026#39;rgba(0, 0, 0, 0.8)\u0026#39; }); }); \u0026lt;/script\u0026gt; \u0026lt;!-- https://ionic.io/ionicons --\u0026gt; \u0026lt;script type=\u0026#34;module\u0026#34; src=\u0026#34;https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script nomodule src=\u0026#34;https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 在以上两个文件中添加代码后就可以愉快缩放了，剩下的效果自由发挥。\n目前我更换主题后，要看具体情况更改（比如主题自带对image的处理），querySelectorAll后的内容可通过F12定位css的具体位置。\n突然想看排球了\n@96yottea\n","date":"2023-08-20T23:03:03+08:00","image":"/post/hugo-image/cover.jpg","permalink":"/post/hugo-image/","title":"Hugo中使用图片的一些心得"},{"content":"其实很早就想搭一个技术博客了，但是一直感觉无从弄起而且耗费精力，直到我看到了Cyanilux这个网站，了解到了hugo，况且我也刚组了台主机，就将这作为纪念吧。\n配置方面我觉得已经完全够用好多年了，颜值也是无比的高，就是用着这堪堪50%cuda数量的4080有些许难受。原先有考虑尝试背插方案，但由于兼容的主板和机箱太少，最后放弃了。\n虽然是第一次装机，但是现在互联网上优质的教程太多了，完全可以自给自足，强烈推荐硬件茶谈或者装机猿的相声。\n说实话看视频是一点不难，但是实际上手会多出一堆需要考虑的问题，尤其是走线之类的。我第一次就把散热器装歪了90度，还有一堆ARGB风扇的连接线，直接把我猪脑烧过载了😅本来用的是送的三个风扇，结果由于没集线器和线缆长度问题，后来搞了3个乔思伯积木风扇，是真的方便。\n实际操作时，插那个CPU的供电线简直反人类，主板24pin供电尽量一次怼进去。至于理线那又是一个痛苦折磨的过程，我这没旋转桌子，趴在地上前后翻腾了一下午，腰酸背痛。\n之后就是把显卡插进去，哎呦那个槽是真难对准。满心欢喜地开机，所有东西都在转，结果第一次居然显示屏不亮，我折腾了半天都没有成功，在床上躺到三点实在睡不着，再爬起来试试。由于我装了fc140的散热器，内存条是被挡住的挺麻烦，最后果然是内存条没插紧，两侧合上的卡扣欺骗了我😭。最后终于进BIOS了\n刚开始识别不到固态也奇了怪了，总之之后就是装系统，我是用了rufus来装，之前steamdeck用过就继续用了。当然可能PE更方便实用些。\n最后就是装各种驱动，无尽地迁移工程、安装软件了。Valorant能稳定5、600帧实在太爽啦\n纪念这历史性的一刻\n感恩父母 后记 前几天由于windows擅自更新的缘故，后来直接无限进入自动修复的重启界面，还原点没用、卸载更新没用，连插u盘进PE系统都蓝屏，最后无奈重装系统。\n一定要禁用更新啊 @Dino_illus\n","date":"2023-08-13T22:19:17+08:00","image":"/post/my-first-post/cover.jpg","permalink":"/post/my-first-post/","title":"年轻人的第一台主机"}]